{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@piyoppi/picopico-pad/src/captureState.js","node_modules/@piyoppi/picopico-pad/src/gamePads.js","node_modules/@piyoppi/picopico-pad/src/keyType.js","node_modules/@piyoppi/picopico-pad/src/padMapper.js","node_modules/@piyoppi/picopico-pad/src/main.js","src/main.js"],"names":["captureState","ready","capturing","waitForStop","GamePads","constructor","_currentIndex","_currentGamePad","_connectedGamePadsCount","_captureState","_eventHandlers","buttonChanged","axisChanged","connected","disconnected","_eventHandlersCounter","state","buttons","axes","axesNeutral","_buttonChangedStates","_axisChangedStates","_setupEventListener","currentIndex","hasPads","buttonChangedStates","axisChangedStates","pads","filteredPads","window","navigator","getGamepads","i","length","push","index","gamepad","setFirstPad","Error","setIndex","_setGamePad","Promise","resolve","reject","setTimeout","initialize","addEventHandler","name","handler","id","step","_captureButtons","_captureAxes","capture","_capture","stop","requestAnimationFrame","_dispatchEvent","e","forEach","obj","slice","map","addEventListener","_gamepadConnectedHandler","_gamepadDisconnectedHandler","currentState","isChanged","pressed","value","touched","keyType","button","axis","stepCaptureState","completed","aborted","GamePadMapper","gamePads","keys","_keys","_keysMap","Map","_axesMap","_cursor","_gamePads","_stepCaptureState","_pausedCapture","_waitNeatrulIndex","applied","registerCompleted","cursorChanged","key","get","setupKeys","cursor","currentCursor","captureStepCompleted","currentKey","resetStepBy","_changeCursor","registerAll","stepBy","register","findIndex","type","_setKeysMap","_setAxesMap","buttonIndex","_deleteValue","set","axisIndex","val","mapVal","mapKey","delete","_pauseCapture","stepProc","_captureCompleted","pressedButtonIndex","indexOf","selectedAxisIndex","diff","Math","abs","isNeatural","_restartCapture","gamePadListElem","document","getElementById","buildGamePadSelector","innerHTML","item","padItemElem","createElement","setAttribute","innerText","appendChild","onchange","parseInt","target","padMapper","captureButton","stopButton","style","display","keyName","console","log","round","_key"],"mappings":"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","file":"main.6f9946f8.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","export const captureState = {\n  ready: 0,\n  capturing: 1,\n  waitForStop: 2\n}\n","import { captureState } from './captureState.js';\n\nexport class GamePads {\n  constructor() {\n    this._currentIndex = -1;\n    this._currentGamePad = null;\n    this._connectedGamePadsCount = 0;\n    this._captureState = captureState.ready;\n\n    this._eventHandlers = {\n      buttonChanged: [],\n      axisChanged: [],\n      connected: [],\n      disconnected: [],\n    };\n    this._eventHandlersCounter = 0;\n\n    this.state = {\n      buttons: [],\n      axes: [],\n      axesNeutral: []\n    };\n    this._buttonChangedStates = [];\n    this._axisChangedStates = [];\n\n    this._setupEventListener();\n  }\n\n  get captureState() {\n    return this._captureState;\n  }\n\n  get currentIndex() {\n    return this._currentIndex;\n  }\n\n  get hasPads() {\n    return this._connectedGamePadsCount > 0;\n  }\n\n  get buttonChangedStates() {\n    return this._buttonChangedStates;\n  }\n\n  get axisChangedStates() {\n    return this._axisChangedStates;\n  }\n\n  get pads() {\n    const filteredPads = [];\n    const pads = window.navigator.getGamepads();\n    for( let i=0; i<pads.length; i++ ) {\n      if( !!pads[i] ) filteredPads.push({ index: i, gamepad: pads[i] });\n    }\n    return filteredPads;\n  }\n\n  get capturing() {\n    return this._captureState !== captureState.ready;\n  }\n\n  async setFirstPad() {\n    const pads = this.pads;\n\n    if( pads.length === 0 ) {\n      throw new Error('Active pads is not found');\n    }\n\n    await this.setIndex(pads[0].index);\n  }\n\n  setIndex(index) {\n    if( this._captureState !== captureState.ready ) {\n      throw new Error('A gamepad was capturing');\n    }\n\n    this._currentIndex = index;\n    this._setGamePad();\n\n    return new Promise((resolve, reject) => {\n      setTimeout( () => {\n        this.initialize();\n        resolve();\n      }, 10 );\n    });\n  }\n\n  addEventHandler(name, handler) {\n    this._eventHandlers[name].push({\n      handler,\n      id: this._eventHandlersCounter++\n    });\n  }\n\n  step() {\n    this._setGamePad();\n    this._captureButtons();\n    this._captureAxes();\n  }\n\n  capture() {\n    if( this.capturing ) return;\n    this._captureState = captureState.capturing;\n    this._capture();\n  }\n\n  stop() {\n    if( this._captureState === captureState.capturing ) {\n      this._captureState = captureState.waitForStop;\n    }\n\n    return new Promise((resolve, reject) => {\n      const waitForStop = () => {\n        if( this._captureState === captureState.ready ) {\n          resolve();\n        } else {\n          window.requestAnimationFrame(waitForStop);\n        }\n      };\n\n      waitForStop();\n    });\n  }\n\n  _capture() {\n    if( this._captureState === captureState.waitForStop ) {\n      this._captureState = captureState.ready;\n      return;\n    }\n\n    window.requestAnimationFrame(() => {\n      if( this.hasPads ) {\n        this.step();\n      }\n      this._capture();\n    });\n  }\n\n  _dispatchEvent(name, e) {\n    this._eventHandlers[name].forEach( obj => obj.handler(e) );\n  }\n\n  initialize() {\n    this.state = {\n      buttons: this._currentGamePad.buttons.slice(),\n      axes: this._currentGamePad.axes.slice(),\n      axesNeutral: this._currentGamePad.axes.slice()\n    };\n    this._buttonChangedStates = this._currentGamePad.buttons.map(() => false);\n    this._axisChangedStates = this._currentGamePad.axes.map(() => false);\n  }\n\n  _setupEventListener() {\n    window.addEventListener(\"gamepadconnected\", e => this._gamepadConnectedHandler(e));\n    window.addEventListener(\"gamepaddisconnected\", e => this._gamepadDisconnectedHandler(e));\n  }\n\n  _gamepadConnectedHandler(e) {\n    this._connectedGamePadsCount++;\n    this._dispatchEvent('connected', e);\n  }\n\n  _gamepadDisconnectedHandler(e) {\n    this._connectedGamePadsCount--;\n    this._dispatchEvent('disconnected', e);\n  }\n\n  _setGamePad() {\n    this._currentGamePad = navigator.getGamepads()[this._currentIndex];\n  }\n\n  _captureButtons() {\n    this.state.buttons.forEach((state, index) => {\n      const currentState = this._currentGamePad.buttons[index];\n      const isChanged = (state.pressed !== currentState.pressed) || (state.value !== currentState.value) || (state.touched !== currentState.touched);\n      this._buttonChangedStates[index] = isChanged;\n      if ( isChanged ) this._dispatchEvent('buttonChanged', {value: currentState, index});\n\n      this.state.buttons[index] = {pressed: currentState.pressed, value: currentState.value, touched: currentState.touched};\n    });\n  }\n\n  _captureAxes() {\n    this.state.axes.forEach((state, index) => {\n      const currentState = this._currentGamePad.axes[index];\n      const isChanged = currentState !== state;\n      this._axisChangedStates[index] = isChanged;\n      if ( isChanged ) this._dispatchEvent('axisChanged', {value: currentState, index});\n\n      this.state.axes[index] = currentState;\n    });\n  }\n}\n","export const keyType = {\n  button: 0,\n  axis: 1\n}\n","import { captureState } from './captureState.js';\nimport { keyType } from './keyType.js';\n\nconst stepCaptureState = {\n  ready: 0,\n  capturing: 1,\n  completed: 2,\n  waitForStop: 3,\n  aborted: 4\n}\n\nexport class GamePadMapper {\n  constructor(gamePads, keys) {\n    this._keys = [];\n\n    this._keysMap = new Map();\n    this._axesMap = new Map();\n\n    this._cursor = -1;\n    this._gamePads = gamePads;\n\n    this._captureState = captureState.ready;\n    this._stepCaptureState = stepCaptureState.ready;\n    this._pausedCapture = false;\n    this._waitNeatrulIndex = -1;\n\n    this._eventHandlers = {\n      buttonChanged: [],\n      axisChanged: [],\n      applied: [],\n      registerCompleted: [],\n      cursorChanged: []\n    };\n\n    this._gamePads.addEventHandler('buttonChanged', e => {\n      const key = this._keysMap.get(e.index);\n      if( !key ) return;\n\n      this._dispatchEvent('buttonChanged', {\n        name: key.name,\n        ...e\n      });\n    });\n\n    this._gamePads.addEventHandler('axisChanged', e => {\n      const key = this._axesMap.get(e.index);\n      if( !key ) return;\n\n      this._dispatchEvent('axisChanged', {\n        name: key.name,\n        ...e\n      });\n    });\n\n    this.setupKeys(keys);\n  }\n\n  get cursor() {\n    return this._cursor;\n  }\n\n  get keys() {\n    return this._keys;\n  }\n\n  get currentCursor() {\n    return this._cursor;\n  }\n\n  get captureStepCompleted() {\n    return this._stepCaptureState === stepCaptureState.completed;\n  }\n\n  get currentKey() {\n    return this._keys[this._cursor];\n  }\n\n  resetStepBy() {\n    this._changeCursor(0);\n    this._stepCaptureState = stepCaptureState.ready;\n  }\n\n  registerAll() {\n    if( this._stepCaptureState !== stepCaptureState.ready ) throw new Error('The state of capturing is not ready');\n\n    return new Promise(async (resolve, reject) => {\n      while( this._stepCaptureState === stepCaptureState.ready || this._stepCaptureState === stepCaptureState.capturing ) {\n        await this.stepBy();\n      }\n\n      this._dispatchEvent('registerCompleted', {});\n      resolve();\n    });\n  }\n\n  async stepBy() {\n    if( this._stepCaptureState === stepCaptureState.ready ) {\n      this._changeCursor(0);\n      this._stepCaptureState = stepCaptureState.capturing;\n    }\n\n    await this._capture();\n    if( this._stepCaptureState === stepCaptureState.capturing ) this._changeCursor(this._cursor + 1);\n    if( this._stepCaptureState === stepCaptureState.waitForStop ) this._stepCaptureState === stepCaptureState.aborted;\n\n    if( this._cursor >= this._keys.length ) {\n      this._stepCaptureState = stepCaptureState.completed;\n    }\n  }\n\n  async register(name) {\n    const index = this._keys.findIndex( key => key.name === name );\n    if( index >= 0 ) {\n      this._changeCursor(index);\n\n      if( this._stepCaptureState !== stepCaptureState.capturing ) {\n        await this._capture();\n        this._changeCursor(-1);\n      }\n    }\n  }\n\n  setupKeys(keys) {\n    this._keys = keys;\n\n    keys.forEach(key => {\n      if( key.index !== 0 && !key.index ) return;\n\n      if( key.type === keyType.button ) {\n        this._setKeysMap(key.index, key);\n      } else {\n        this._setAxesMap(key.index, key);\n      }\n    });\n  }\n\n  stop() {\n    this._captureState = captureState.waitForStop;\n    this._changeCursor(-1);\n  }\n\n  addEventHandler(name, handler) {\n    this._eventHandlers[name].push({\n      handler,\n      id: this._eventHandlersCounter++\n    });\n  }\n\n  _setKeysMap(buttonIndex, key) {\n    this._deleteValue(this._keysMap, key);\n    this._keysMap.set(buttonIndex, key);\n    key.index = buttonIndex;\n  }\n\n  _setAxesMap(axisIndex, key) {\n    this._deleteValue(this._axesMap, key);\n    this._axesMap.set(axisIndex, key);\n    key.index = axisIndex;\n  }\n\n  _deleteValue(map, val) {\n    let key = null;\n    map.forEach((mapVal, mapKey) => {\n      if( val.name === mapVal.name ) {\n        key = mapKey;\n      }\n    });\n    if( key !== null ) map.delete(key);\n  }\n\n  async _capture() {\n    if( this._captureState === captureState.capturing ) throw new Error('capturing is already started');\n    this._captureState = captureState.capturing;\n\n    if( this._gamePads.capturing ) {\n      await this._pauseCapture();\n    }\n\n    return new Promise((resolve, reject) => {\n      const stepProc = () => {\n        this._gamePads.step();\n\n        if(this._captureState === captureState.waitForStop) {\n          this._captureCompleted();\n          if( this._stepCaptureState === stepCaptureState.capturing ) this._stepCaptureState = stepCaptureState.waitForStop;\n          resolve();\n          return;\n        }\n\n        const key = this.currentKey;\n\n        if( key.type === keyType.button ) {\n          const pressedButtonIndex = this._gamePads.buttonChangedStates.indexOf(true);\n\n          if( pressedButtonIndex >= 0 && this._gamePads.state.buttons[pressedButtonIndex].pressed ) {\n            this._setKeysMap(pressedButtonIndex, key);\n            this._dispatchEvent('applied', key);\n            this._captureCompleted();\n            resolve();\n            return;\n          }\n        } else {\n          const selectedAxisIndex = this._gamePads.state.axes\n            .map( (value, index) => value - this._gamePads.state.axesNeutral[index] )\n            .findIndex(diff => Math.abs(diff) > 0.8);\n\n          if( this._waitNeatrulIndex >= 0 ) {\n            const isNeatural = Math.abs(this._gamePads.state.axesNeutral[this._waitNeatrulIndex] - this._gamePads.state.axes[this._waitNeatrulIndex]) < 0.1\n            if( isNeatural ) {\n              this._waitNeatrulIndex = -1;\n              this._captureCompleted();\n              resolve();\n              return;\n            }\n          } else if( selectedAxisIndex >= 0 ) {\n            this._setAxesMap(selectedAxisIndex, key);\n            this._dispatchEvent('applied', key);\n            this._waitNeatrulIndex = selectedAxisIndex;\n          }\n        }\n\n        window.requestAnimationFrame(() => stepProc());\n      };\n\n      stepProc();\n    });\n  }\n\n  _captureCompleted() {\n    this._captureState = captureState.ready;\n    this._restartCapture();\n  }\n\n  async _pauseCapture() {\n    await this._gamePads.stop();\n    this._pausedCapture = true;\n  }\n\n  _restartCapture() {\n    if( !this._pausedCapture ) return;\n    this._gamePads.capture();\n    this._pausedCapture = false;\n  }\n\n  _dispatchEvent(name, e) {\n    this._eventHandlers[name].forEach( obj => obj.handler(e) );\n  }\n\n  _changeCursor(cursor) {\n    this._cursor = cursor;\n\n    if( cursor < this._keys.length ) {\n      this._dispatchEvent('cursorChanged', {cursor});\n    } else {\n      this._dispatchEvent('cursorChanged', {cursor: -1});\n    }\n  }\n}\n","import { GamePads } from './gamePads.js';\nimport { GamePadMapper } from './padMapper.js';\nimport { keyType } from './keyType.js';\nimport { captureState } from './captureState.js';\n\nexport { GamePads, GamePadMapper, keyType, captureState };\n","import { GamePads, GamePadMapper, keyType } from '@piyoppi/picopico-pad';\n\nconst gamePads = new GamePads();\nconst keys = [\n  { name: 'button-1', type: keyType.button, index: 0 },\n  { name: 'button-2', type: keyType.button, index: 1 },\n  { name: 'button-3', type: keyType.button, index: 2 },\n  { name: 'button-4', type: keyType.button, index: 3 },\n  { name: 'axis-x', type: keyType.axis, index: 0 },\n  { name: 'axis-y', type: keyType.axis, index: 1 }\n];\n\nconst gamePadListElem = document.getElementById('gamepads');\nconst buildGamePadSelector = () => {\n  gamePadListElem.innerHTML = '';\n\n  gamePads.pads.forEach( item => {\n    const padItemElem = document.createElement('option');\n    padItemElem.setAttribute('value', item.index);\n    padItemElem.innerText = item.gamepad.id;\n    gamePadListElem.appendChild(padItemElem);\n  });\n};\n\ngamePadListElem.onchange = async (e) => {\n  await gamePads.stop();\n  await gamePads.setIndex(parseInt(e.target.value));\n  gamePads.capture();\n};\n\nconst padMapper = new GamePadMapper(gamePads, keys);\n\n// UI\nconst captureButton = document.getElementById('capture');\nconst stopButton = document.getElementById('stop');\nstopButton.style.display = 'none';\n\nstopButton.addEventListener('click', () => {\n  padMapper.stop();\n});\n\n// set event hander to buttons\nkeys.map(key => key.name).forEach(keyName => {\n  const targetButton = document.getElementById(`setup-${keyName}`);\n  targetButton.addEventListener('click', async () => {\n    await padMapper.register(keyName);\n  });\n});\n\n// Show the result of key mappings\npadMapper.addEventHandler('applied', e => {\n  document.getElementById(`key-${e.name}`).innerText = e.index;\n});\n\ngamePads.addEventHandler('connected', async (e) => {\n  document.getElementById('connecting-label').innerText = `✅接続されました ${e.gamepad.id}`;\n  buildGamePadSelector();\n  await gamePads.setFirstPad();\n\n  gamePads.capture();\n\n  captureButton.addEventListener('click', () => {\n    console.log('capturing');\n    padMapper.resetStepBy();\n    padMapper.registerAll();\n    stopButton.style.display = '';\n    captureButton.style.display = 'none';\n  });\n\n  padMapper.addEventHandler('buttonChanged', e => {\n    console.log(`Button ${e.index} ${e.name} : ${e.value.pressed}`);\n    if( e.value.pressed ) {\n      document.getElementById(`state-${e.name}`).innerText = '💡';\n    } else {\n      document.getElementById(`state-${e.name}`).innerText = '  ';\n    }\n  });\n  padMapper.addEventHandler('axisChanged', e => {\n    console.log(`Axis ${e.index} ${e.name} : ${e.value}`);\n    document.getElementById(`state-${e.name}`).innerText = Math.round(e.value * 1000.0) / 1000.0;\n  });\n});\n\npadMapper.addEventHandler('cursorChanged', e => {\n  keys.forEach((_key, index) => {\n    document.getElementById(`cursor${index}`).innerText = '';\n  });\n  if( e.cursor >= 0 ) document.getElementById(`cursor${e.cursor}`).innerText = '👉';\n});\n\npadMapper.addEventHandler('registerCompleted', e => {\n  console.log('captured');\n  stopButton.style.display = 'none';\n  captureButton.style.display = '';\n});\n"]}